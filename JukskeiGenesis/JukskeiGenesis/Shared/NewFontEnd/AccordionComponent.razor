@using DAL
@inject IJSRuntime JS

@{
    DatabaseProcessor dbfunctions = new DatabaseProcessor();
    List<Tournament> tournaments = dbfunctions.GetTournaments();
    int counter = 0;
    int countAccordions = 1;
}
<div class="SearchParms">
    <div class="SearchBox">
        <input type="text" class="SeachTextBox" placeholder="Search Tournament Name." @bind="_tournamentName" @oninput="@((args) => { _tournamentName = ((ChangeEventArgs)args).Value.ToString(); ValidateTournamentNameLength(); })">
    </div>

    <div class="ActivityBox">
        <select name="ComboBox" class="ComboTournies">
            <option value="Upcoming" class="SelectCombo">Upcoming</option>
            <option value="Active" class="SelectCombo">Active</option>
            <option value="Past" class="SelectCombo">Past</option>
        </select>
    </div>
</div>

<button type="submit" class="SearchButton">Search</button>

@foreach (var tournies in tournaments)
{
    int i = counter;
    if (i != 5)
    {
        <div class="accordion-body" id="@($"Accordion-{countAccordions}")">
            <input type="submit" value="Details" class="TourDetails" />
            <button class="AccordionButton @(_isAccordionActive[i] ? "active" : "")" @onclick="() => ToggleAccordion(i)">
                <div class="AccordionContent">
                    <img />
                </div>
                <div class="AccordionContent">
                    <h5><span class="TourHeading"> @tournies.Tournament_Name</span></h5>
                    <p>@tournies.Tournament_Location</p>
                </div>
            </button>
            <div class="PanelFlex" style="max-height: @(_isAccordionActive[i] ? $"{GetPanelMaxHeight(i)}%" : "0");">
                <div class="PanelContent">
                    <RosterComponent />
                </div>
                <div class="PanelContent">
                    <RosterComponent />
                </div>
            </div>
        </div>
        counter++;
        countAccordions++;
    }
    else
    {
        break;
    }
}

@code {
    private string _tournamentName = string.Empty;

    private bool ValidateTournamentNameLength() =>
        _tournamentName == string.Empty;

    private async void AccordionClick() =>
        await JS.InvokeAsync<string>("onClickButton");

    private async void SearchParms() =>
        await JS.InvokeAsync<string>("GetSearchParms");

    private bool[] _isAccordionActive = new bool[5];

    private void ToggleAccordion(int index) =>
        _isAccordionActive[index] = !_isAccordionActive[index];

    private int GetPanelMaxHeight(int index) =>
        _isAccordionActive[index] ? 100 : 0;
} 